{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","handleClick","handleHideClock","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAC1BG,OAAOG,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MAC7D,OAXP,gCAcE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAChCR,OAAOG,QAAQO,MAAf,uBAAqCH,EAAUC,KAA/C,eAA0DT,KAAKU,MAAMD,SAhB3E,kCAoBE,WACER,OAAOW,cAAcZ,KAAKD,WArB9B,oBAwBE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KACAY,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YArC1C,GAA2BO,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAUX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAW,UACXC,UAAU,GAHd,EAMEvB,QAAU,EANZ,EAsBEwB,YAAc,WACZ,EAAKpB,SAAS,CAAEmB,UAAU,KAvB9B,EA0BEE,gBAAkB,SAACC,GACjBA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,KA5B9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,QAAS5B,KAAKuB,aACxCI,SAASC,iBAAiB,cAAe5B,KAAKwB,iBAC9CxB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWL,QAC1B,QAbP,kCAgBE,WACEW,SAASE,oBAAoB,QAAS7B,KAAKuB,aAC3CI,SAASE,oBAAoB,cAAe7B,KAAKwB,iBACjDvB,OAAOW,cAAcZ,KAAKD,WAnB9B,oBA+BE,WACE,MAAgCC,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECS,GAAY,cAAC,EAAD,CAAOb,KAAMY,WAtClC,GAAyBP,IAAMC,WCd/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.289e7467.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: string,\n}\n\ninterface State {\n  time: Date,\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      window.console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      window.console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): React.ReactNode {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ninterface State {\n  clockName: string,\n  hasClock: boolean,\n}\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick);\n    document.addEventListener('contextmenu', this.handleHideClock);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick);\n    document.removeEventListener('contextmenu', this.handleHideClock);\n    window.clearInterval(this.timerId);\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render(): React.ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}